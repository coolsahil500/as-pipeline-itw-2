name: DevSecOps CI/CD to EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      AWS_ACCOUNT_ID: 339713011246
      CLUSTER_NAME: itw-test-project
      IMAGE_REPO_NAME: nodejs-app-repo
      REPOSITORY_URI: 339713011246.dkr.ecr.ap-south-1.amazonaws.com/nodejs-app-repo
      IMAGE_TAG: latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::339713011246:role/github-oidc-deployer-role-v2
        aws-region: ${{ env.AWS_REGION }}
        audience: sts.amazonaws.com

    - name: tfsec - Scan Terraform for security issues
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        working_directory: .

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and tag Docker image
      run: |
        docker build -t $REPOSITORY_URI:$IMAGE_TAG .

    - name: Trivy - Scan Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}
        format: table
        exit-code: 0

    - name: Push Docker image to Amazon ECR
      run: |
        docker push $REPOSITORY_URI:$IMAGE_TAG

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

    - name: Install Sealed Secrets Controller
      run: |
        kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/controller.yaml

    - name: Install Sealed Secrets Controller
      run: |
        kubectl apply --validate=false -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/controller.yaml

    - name: Install Sealed Secrets Controller
      run: |
        kubectl apply --validate=false -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/controller.yaml

    - name: Install Sealed Secrets Controller
      run: |
        kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/controller.yaml

    - name: Install kubeseal CLI
      run: |
        wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/kubeseal-0.25.0-linux-amd64.tar.gz
        tar -xvzf kubeseal-0.25.0-linux-amd64.tar.gz
        sudo install kubeseal /usr/local/bin/kubeseal

    - name: Create and Seal Kubernetes Secret
      run: |
        mkdir -p sealed-secrets

        # Create a temporary secret YAML
        cat <<EOF > my-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: my-secret
          namespace: default
        type: Opaque
        data:
          username: $(echo -n "admin" | base64)
          password: $(echo -n "mypassword" | base64)
        EOF

        # Seal the secret
        kubeseal --controller-namespace kube-system --format=yaml < my-secret.yaml > sealed-secrets/mysealedsecret.yaml


    - name: Apply SealedSecret to cluster
      run: |
        kubectl apply -f sealed-secrets/

    - name: Deploy Kubernetes manifests
      run: |
        kubectl apply -f k8s/
