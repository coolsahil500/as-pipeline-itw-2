name: DevSecOps CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      CLUSTER_NAME: itw-test-project
      KUBECONFIG: /tmp/kubeconfig
      REPOSITORY_URI: 339713011246.dkr.ecr.ap-south-1.amazonaws.com/nodejs-app-repo
      IMAGE_TAG: latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # ----------- AWS Authentication via GitHub OIDC -----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::339713011246:role/github-oidc-deployer-role-v2
          aws-region: ${{ env.AWS_REGION }}

      # ----------- Terraform Security Scan using tfsec -----------
      - name: tfsec - scan Terraform code
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: terraform

      # ----------- Docker Image Security Scan using Trivy -----------
      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy vulnerability scanner on Docker image
        run: |
          trivy image --exit-code 0 --severity CRITICAL,HIGH $REPOSITORY_URI:$IMAGE_TAG

      # ----------- Configure kubeconfig for EKS -----------
      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $CLUSTER_NAME \
            --kubeconfig $KUBECONFIG

      # ----------- Deploy Sealed Secrets Controller -----------
      - name: Deploy Sealed Secrets controller
        run: |
          kubectl --kubeconfig=$KUBECONFIG apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/controller.yaml

      # ----------- Apply Sealed Secrets (if manifest exists) -----------
      - name: Apply Sealed Secrets
        run: |
          kubectl --kubeconfig=$KUBECONFIG apply -f sealed-secrets/
        

      # ----------- Deploy Node.js App to EKS -----------
      - name: Deploy app to EKS
        run: |
          kubectl --kubeconfig=$KUBECONFIG apply -f k8s/
